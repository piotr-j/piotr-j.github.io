<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webdev on PiotrJ</title>
    <link>https://piotr-j.github.io/tags/webdev/</link>
    <description>Recent content in Webdev on PiotrJ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2015 Piotr Jastrzębski</copyright>
    <lastBuildDate>Sun, 03 Jan 2016 12:08:42 +0100</lastBuildDate>
    <atom:link href="https://piotr-j.github.io/tags/webdev/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to: this website</title>
      <link>https://piotr-j.github.io/2016/01/03/how-to-this-website/</link>
      <pubDate>Sun, 03 Jan 2016 12:08:42 +0100</pubDate>
      
      <guid>https://piotr-j.github.io/2016/01/03/how-to-this-website/</guid>
      <description>

&lt;h1 id=&#34;how-this-site-was-made:85c1f74e3b165d8712a92bf4314d49aa&#34;&gt;How this site was made&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;m not very experianced web developer, so process of making this website was a bit frustrating. Actually, deployment was the most annoying part.
Lets start with Hugo.&lt;/p&gt;

&lt;h1 id=&#34;hugo:85c1f74e3b165d8712a92bf4314d49aa&#34;&gt;Hugo&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is a static site generator written in &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; programming language. Hugo is still in early stages, but it has good documentation and active community.
Check &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Hugo quickstart&lt;/a&gt; for a short guide how to create your first website in few minutes.&lt;/p&gt;

&lt;h1 id=&#34;github-pages:85c1f74e3b165d8712a92bf4314d49aa&#34;&gt;Github pages&lt;/h1&gt;

&lt;p&gt;This page is hosted on github pages, as user page. &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github pages quick guide&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;deployment:85c1f74e3b165d8712a92bf4314d49aa&#34;&gt;Deployment&lt;/h1&gt;

&lt;p&gt;Deployment is done with &lt;a href=&#34;http://wercker.com/&#34;&gt;wercker&lt;/a&gt;, an automation tool. &lt;a href=&#34;https://gohugo.io/tutorials/automated-deployments/&#34;&gt;This guide&lt;/a&gt; is a great starting point.
Assuming that you have read the guide, here are some gotchas that I&amp;rsquo;ve found important:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t forget to remove the hidden &lt;code&gt;.git&lt;/code&gt; folder from cloned theme, as it will cause the theme to be not available in &lt;code&gt;wercker&lt;/code&gt; environment&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;rm -rf themes/herring-cove/.git
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;User/organization github site is located in &lt;code&gt;master&lt;/code&gt; branch of your repo, &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;gh-pages&lt;/code&gt; like project sites.
This means that you should put your source files in different branch, I&amp;rsquo;ve done it in &lt;code&gt;source&lt;/code&gt; branch. Master branch should be empty now, it will be overriden anyway.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-git&#34;&gt;git checkout --orphan source
git add .
git commit -m &amp;quot;Added site sources&amp;quot;
git push -u origin source
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Below is my wercker.yml files. I use &lt;code&gt;golang&lt;/code&gt; box to save few seconds on build time. Pygments are disabled to save time as well, theme I&amp;rsquo;m using has &lt;code&gt;highlight.js&lt;/code&gt; built-in.
The theme has a &lt;code&gt;-clean&lt;/code&gt; suffix, as I forgot to remove &lt;code&gt;.git&lt;/code&gt; from it first time. I&amp;rsquo;m using different &lt;code&gt;gh-pages&lt;/code&gt; script, as I had trouble with the one linked in official guide
with user page.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;box: golang:1.5.1
build:
  steps:
    - arjen/hugo-build:
        version: &amp;quot;0.15&amp;quot;
        theme: &amp;quot;ghostwriter-clean&amp;quot;
        disable_pygments: true
deploy:
  steps:
    - install-packages:
        packages: git ssh-client
    - uetchy/gh-pages@0.3.1:
        token: $GIT_TOKEN
        domain: piotrjastrzebski.io
        path: public/
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;on wercker site, in application settings -&amp;gt; options -&amp;gt; ignored branches add &lt;code&gt;master&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;in application settings -&amp;gt; targets -&amp;gt; your deploy target, change &lt;code&gt;master&lt;/code&gt; to your custom branch, &lt;code&gt;source&lt;/code&gt; in this example
&lt;img src=&#34;https://piotr-j.github.io/img/targets.jpg&#34; alt=&#34;dns&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;custom-domain:85c1f74e3b165d8712a92bf4314d49aa&#34;&gt;Custom domain&lt;/h1&gt;

&lt;p&gt;Last piece of the puzzle, is custom domain support, if you need it. From source side, setting your domain in &lt;code&gt;wercker.yml&lt;/code&gt; is all that is required.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;    - uetchy/gh-pages@0.3.1:
        token: $GIT_TOKEN
        domain: your-domain-here
        path: public/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The hard part is, wrestling with your domain registrar to setup dns correctly. Here are the settings I&amp;rsquo;ve used:
&lt;img src=&#34;https://piotr-j.github.io/img/dns.jpg&#34; alt=&#34;dns&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Read more in &lt;a href=&#34;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/&#34;&gt;github pages documentation&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;final-source:85c1f74e3b165d8712a92bf4314d49aa&#34;&gt;Final source&lt;/h1&gt;

&lt;p&gt;Current source for this website is available &lt;a href=&#34;https://github.com/piotr-j/piotr-j.github.io&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>